#include <iostream>
#include <stdlib.h> 
using namespace std;

void print(int* m, int n); // функция выводит сам массив
void print_k(int* m, int n); // функция выводит массив от k до k+1
void InsertSort(int* m, int n); //сортировка массива по убыванию
int del_odd_number(int* m, int n); //удаление нечетных чисел

int main() {
    srand(time(0));
    setlocale(LC_ALL, "Russian"); //локализация

    const int max_size = 100; //максимальная величина массива
    int mas[max_size], n, odd_number;

    do {
        cout << "Введите длину массива - число n (n > 1 и n < 100)  "; 
        cin >> n; //количество элементов в массиве
    } while (n <= 1 && n > 100);
    for (int i = 0; i < n; ++i) { //создаю массив случайных чисел от 0 до 100
        mas[i] = rand() % 101;
    }
    
    cout << endl << "Текущий массив" << endl;
    print(mas, n); //вывожу сам массив от первого элемента
    print_k(mas, n); //вывожу массив от элемента k

    InsertSort(mas, n);  //сортирую по убыванию
    cout << "Элементы массива упорядочены по убыванию" << endl;
    print(mas, n); //вывожу сам массив от первого элемента
    
    n = del_odd_number(mas, n); //обновляю количество элементов в массиве
    cout << "Из кольца удалены нечетные элементы, размер массива " << n << endl << "Текущий массив" << endl;
    print(mas, n); //вывожу новый массив без нечетных чисел

    if (n != 0) {
        print_k(mas, n); //вывожу массив от элемента k
    }
    return 0;
}

void print(int* m, int n) { // функция выводит массив
    for (int i = 0; i < n; ++i) {
        cout << m[i] << ' ';
    }
    cout << endl << endl;
    //m - массив
    //n - количество элементов в массиве m
}

void print_k(int* m, int n) { // функция выводит массив от k до k+1 справа налево
    int k;
    do {
        cout << "Введите номер элемента, с которого следует вывести массив справа налево (k > 0, но k < n)  ";
        cin >> k; //ввожу НОМЕР, от которого следует вывевти массив справа налево
    } while (k < 1 || k > n);
    k -= 1; //теперь, k не НОМЕР, а ИНДЕКС элемента
    cout << endl << "Массив справа налево от элемента " << k + 1 << " до элемента " << (k + 1) % n + 1 << endl;

    for (int i = k; i > -(n - k); --i) { //вывожу массив от k
        cout << m[(i + n) % n] << ' ';
    }
    cout << endl << endl;
    //m - массив
    //n - количество элементов в массиве m
}

void InsertSort(int* m, int n) { //сортировка массива по убыванию методом ВСТАВКИ
    int tmp; //временная переменная
    for (int i = 1; i < n; i++) {
        for (int j = i; j > 0 && m[j - 1] < m[j]; j--) {
            tmp = m[j - 1]; 
            m[j - 1] = m[j];
            m[j] = tmp;
        }
    }
    //m - массив
    //n - количество элементов в массиве m
}

int del_odd_number(int* m, int n) { //удаление нечетных чисел
    int  i = 0;
    while (i < n) {
        if (m[i] % 2 != 0) { //нахожу нечетное число
            for (int j = i; j < n - 1; j++) {
                m[j] = m[j + 1]; //сдвигаю массив влево на песто нечетного числа
            }
            n--; //уменьшаю размер массива, т.к одно нечетное число удалено
        }
        else i++;
    }
    return n; //новая длина массива
    //m - массив
    //n - количество элементов в массиве m
}